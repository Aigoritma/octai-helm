# Default values for octai.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: octaidockerhub/octai
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: 
  - name: docker-registry

nameOverride: "data-service"
fullnameOverride: "data-service"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

service:
  type: ClusterIP
  name: app
  port: 8080

ingress:
  enabled: true
  className: ""
  annotations: 
    kubernetes.io/ingress.class: nginx
  hosts:
    - host: "gw.customer.octai.com"
      paths:
        - path: /
          pathType: Prefix

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

lifecycle: 
  preStop:
    exec:
      command: 
        - sleep
        - "5"
envFrom:
  - secretRef:
      name: data-service
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: 
  - name: data-pv
    persistentVolumeClaim:
      claimName: data-shared-vc-customer
  - name: apmsocketpath
    hostPath:
      path: /var/run/datadog
  - name: cache-volume
    emptyDir: 
      medium: Memory
      sizeLimit: 500Mi

# Additional volumeMounts on the output Deployment definition.
volumeMounts: 
  - name: data-pv
    mountPath: "/data"
  - name: apmsocketpath
    mountPath: /var/run/datadog
  - name: cache-volume
    mountPath: "/dev/shm"

nodeSelector: {}

tolerations: []

affinity: {}

########################################
# persistent volume values #
########################################
pvc:
  enabled: true
  name: data-shared-vc-customer
  accessModes:
    - ReadWriteOnce
  storageClassName: data-shared-vc-customer
  storageSize: 100Gi

########################################
# storage class values #
########################################
storageClass:
  enabled: true
  name: data-shared-vc-customer
  provisioner: kubernetes.io/aws-ebs
  type: gp2
  fsType: ext4
  volumeBindingMode: WaitForFirstConsumer
  allowVolumeExpansion: true
  reclaimPolicy: Retain


###############################################
# reloader values #
################################################
reloader:
  enabled: true
  reloader:
    watchGlobally: true

##################################################
# ingress-nginx dependency values #
##################################################
ingress-nginx:
  enabled: true
  defaultBackend:
    enabled: false
  controller:
    ingressClass: nginx
    replicaCount: 1
    containerPort:
      http: 80
      https: 443
      tohttps: 2443
    ingressClassResource:
      name: nginx
      enabled: true
      default: false
      controllerValue: "k8s.io/nginx"
    config:
      client-body-buffer-size: "10m"
      proxy-body-size: "16384m"
      proxy-send-timeout: "300"
      proxy-read-timeout: "300"
      set-real-ip-from: "0.0.0.0/0"
      keep-alive: "600"
      keep-alive-requests: "1000"
      use-http2: true
      http-snippet: |
        server {
          listen 2443;
          return 308 https://$host$request_uri;
          }
      service:
        externalTrafficPolicy: "Local"
        targetPorts:
          http: tohttps
          https: http
        annotations:
          service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-1:026996776847:certificate/b605772e-881d-409f-bb92-990ae3510164
          service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
          service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
          service.beta.kubernetes.io/aws-load-balancer-type: nlb
          service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: 'true'
          service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: '3600'
        internal:
          enabled: true

##################################################
# kubernetes-external-secrets dependency values #
##################################################
kubernetes-external-secrets:
  enabled: true
  env: 
    AWS_REGION: us-east-1
    METRICS_PORT: 3001
    WATCH_TIMEOUT: 90000
    USE_HUMAN_READABLE_LOG_LEVELS: true
    LOG_LEVEL: error
  securityContext:
    fsGroup: 65534


##################################################
# datadog dependency values #
##################################################
datadog:
  enbaled: false
  targetSystem: "linux"
  datadog:
    processAgent:
      enabled: true
      processCollection: true
    apm: true
  site: datadoghq.com
  clustername: "octai-cluster"
  apiKeyExistingSecret: datadog-api-key
  kubeStateMetricsEnabled: true
  kubeStateMetricCore:
    enabled: true
    ignoreLegacyKSMCheck: true
  containerExclude: "name:.*"
  containerInclude: "name:^data-service.*"
  logs:
    enabled: true
    containerCollectAll: true
    containerCollectUsingFiles: true
    autoMultiLineDetection: true
  prometheusScrape:
    enabled: true

            
            