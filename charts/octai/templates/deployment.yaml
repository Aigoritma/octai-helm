apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "octai.fullname" . }}
  labels:
    {{- include "octai.labels" . | nindent 4 }}
    {{- if .Values.datadog.enabled }}
    {{- include "octai.customDatadogLabels" . | nindent 4 }}
    {{- end }}
  annotations:
    {{- include "octai.customAnnotations" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "octai.selectorLabels" . | nindent 6 }}
      gruntwork.io/deployment-type: main
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "octai.selectorLabels" . | nindent 8 }}
        {{- if .Values.datadog.enabled }}
        {{- include "octai.customDatadogLabels" . | nindent 8 }}
        {{- end }}
        gruntwork.io/deployment-type: main
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: data-service
          image: "{{ .Values.imageData.repository }}:{{ .Values.imageData.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.imageData.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.dataPort }}
              protocol: TCP
          startupProbe:
            httpGet:
              path: /api/v1/health
              port: 8080
            initialDelaySeconds: 15
            failureThreshold: 30
            periodSeconds: 10
            timeoutSeconds: 10
            successThreshold: 1
          livenessProbe:
            httpGet:
              path: /api/v1/health
              port: 8080
            initialDelaySeconds: 15
            failureThreshold: 5
            periodSeconds: 30
            timeoutSeconds: 120
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /api/v1/health
              port: 8080
            initialDelaySeconds: 15
            failureThreshold: 5
            periodSeconds: 30
            timeoutSeconds: 120
            successThreshold: 1
          envFrom:
            - secretRef:
                name: {{ include "octai.fullname" . }}-secret
          {{- with .Values.lifecycle}}
          lifecycle:
            {{- toYaml .| nindent 12 }}
          {{- end }}
          {{- if .Values.datadog.enabled }}
          env:
            - name: DD_ENV
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/data-service.env']
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/data-service.service']
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/data-service.version']
            - name: DD_PROFILING_ENABLED
              value: "true"
            - name: DD_LOGS_INJECTION
              value: "true"
          {{- end }}
          volumeMounts:
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- if .Values.datadog.enabled }}
            - name: apmsocketpath
              mountPath: /var/run/datadog/
            {{- end }}
        - name: compute-engine
          image: "{{ .Values.imageCompute.repository }}:{{ .Values.imageCompute.tag | default .Chart.AppVersion }}" 
          imagePullPolicy: {{ .Values.imageCompute.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.computePort }}
              protocol: TCP
          envFrom:
            - secretRef:
                name: {{ include "octai.fullname" . }}-secret
          {{- with .Values.lifecycle}}
          lifecycle:
            {{- toYaml .| nindent 12 }}
          {{- end }}
          {{- if .Values.datadog.enabled }}
          env:
            - name: DD_ENV
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/compute-engine.env']
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/compute-engine.service']
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/compute-engine.version']
            - name: DD_PROFILING_ENABLED
              value: "true"
            - name: DD_LOGS_INJECTION
              value: "true"
          {{- end }}
          volumeMounts:
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- if .Values.datadog.enabled }}
            - name: apmsocketpath
              mountPath: /var/run/datadog/
            {{- end }}
        - name: scheduler-service
          image: "{{ .Values.imageScheduler.repository }}:{{ .Values.imageScheduler.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.imageScheduler.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.schedulerPort }}
              protocol: TCP
          envFrom:
            - secretRef:
                name: {{ include "octai.fullname" . }}-secret
          {{- with .Values.lifecycle}}
          lifecycle:
            {{- toYaml .| nindent 12 }}
          {{- end }}
          {{- if .Values.datadog.enabled }}
          env:
            - name: DD_ENV
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/scheduler-service.env']
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/scheduler-service.service']
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/scheduler-service.version']
            - name: DD_PROFILING_ENABLED
              value: "true"
            - name: DD_LOGS_INJECTION
              value: "true"
          {{- end }}
          volumeMounts:
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- if .Values.datadog.enabled }}
            - name: apmsocketpath
              mountPath: /var/run/datadog/
            {{- end }}
      volumes:
        {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if $.Values.datadog.enabled }}
        - hostPath:
            path: /var/run/datadog/
          name: apmsocketpath
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
